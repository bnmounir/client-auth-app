{"version":3,"sources":["components/Header.js","components/Landing.js","components/auth/Signup.js","actions/index.js","components/auth/Logout.js","components/auth/Login.js","components/Features.js","components/requireAuth.js","components/Footer.js","components/App.js","serviceWorker.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["Header","renderLinks","props","authenticated","to","M","window","document","addEventListener","elems","querySelectorAll","Sidenav","init","className","href","data-target","this","id","Component","connect","state","auth","Landing","style","textAlign","Signup","handleSubmit","formProps","signup","history","push","onSubmit","Field","name","type","component","autoComplete","htmlFor","errorMessage","compose","errorMassage","callback","dispatch","a","axios","post","res","payload","data","token","localStorage","setItem","response","error","reduxForm","form","Logout","handleRedirect","setTimeout","logout","removeItem","Login","login","requireAuth","ChildComponent","ComposedComponent","shouldNavigateAway","Footer","flexShrink","marginTop","App","flex","exact","path","Features","Boolean","location","hostname","match","INITIAL_STATE","combineReducers","action","formReducer","store","createStore","reducers","getItem","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5f2fb854.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n    componentDidMount() {\n        const M = window.M;\n        document.addEventListener('DOMContentLoaded', function() {\n            var elems = document.querySelectorAll('.sidenav');\n            var instances = M.Sidenav.init(elems, {});\n        });\n    }\n    renderLinks = () => {\n        return this.props.authenticated ? (\n            <>\n                <li>\n                    <Link to='/logout'>Logout</Link>\n                </li>\n                <li>\n                    <Link to='/features'>Features</Link>{' '}\n                </li>\n            </>\n        ) : (\n            <>\n                <li>\n                    <Link to='/signup'>Sign up</Link>\n                </li>\n                <li>\n                    <Link to='/login'>Log in</Link>\n                </li>\n            </>\n        );\n    };\n    render() {\n        return (\n            <header>\n                <nav className='blue-grey darken-4'>\n                    <div className='nav-wrapper container'>\n                        <Link className='brand-logo' to='/'>\n                            Redux Auth\n                        </Link>\n                        <a\n                            href='#a'\n                            data-target='mobile-demo'\n                            className='sidenav-trigger'\n                        >\n                            <i className='material-icons'>menu</i>\n                        </a>\n                        <ul className='right hide-on-med-and-down'>\n                            {this.renderLinks()}\n                        </ul>\n                    </div>\n                </nav>\n                <ul className='sidenav' id='mobile-demo'>\n                    {this.renderLinks()}\n                </ul>\n            </header>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return { authenticated: state.auth.authenticated };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nconst Landing = () => {\n    return (\n        <>\n            <div style={{ textAlign: 'center' }}>\n                <h1>Welcome</h1>\n                <p>This app is for educational purposes only.</p>\n            </div>\n            <br />\n            <br />\n            <br />\n            <br />\n            <h4>Tech Stack</h4>\n            <br />\n            <h5>1. Client</h5>\n            <p>\n                <a href='https://github.com/bnmounir/client-auth'>Code</a>\n            </p>\n            <br />\n            <table className='striped centered responsive-table'>\n                <thead>\n                    <tr>\n                        <th>Feature Name</th>\n                        <th>Description</th>\n                        <th>Classification</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr>\n                        <td>React, React Router</td>\n                        <td>\n                            Component based web app, all the navigation is\n                            handled with react-router.\n                        </td>\n                        <td>Library to Framework</td>\n                    </tr>\n                    <tr>\n                        <td>Redux, Redux Form</td>\n                        <td>\n                            state management and all data flows through redux.\n                        </td>\n                        <td>Library</td>\n                    </tr>\n                    <tr>\n                        <td>JSON Web Token</td>\n                        <td>\n                            used for handling the auth state for the users,\n                            stored on localStorage.\n                        </td>\n                        <td>Standard</td>\n                    </tr>\n                </tbody>\n            </table>\n            <br />\n            <h5>2. Server</h5>\n            <p>\n                <a href='https://github.com/bnmounir/server-api'>Code</a>\n            </p>\n            <br />\n            <table className='striped centered responsive-table'>\n                <thead>\n                    <tr>\n                        <th>Feature Name</th>\n                        <th>Description</th>\n                        <th>Classification</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr>\n                        <td>Google App Engine</td>\n                        <td>the platform where the server is hosted</td>\n                        <td>PaaS</td>\n                    </tr>\n                    <tr>\n                        <td>Node, Express</td>\n                        <td>\n                            node runtime environment and Express for building\n                            the REST API\n                        </td>\n                        <td>Runtime, Framework</td>\n                    </tr>\n                    <tr>\n                        <td>Passport, Local and Jwt strategies</td>\n                        <td>\n                            the jwt strategy handles the authentication of users\n                            on the server through a token while the local\n                            strategy handles it through email and password\n                        </td>\n                        <td>Middleware</td>\n                    </tr>\n                    <tr>\n                        <td>Bcrypt</td>\n                        <td>\n                            hashes the password before storing them in the\n                            database, also does comparison of hashes during the\n                            login process\n                        </td>\n                        <td>Library</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>\n                <a href='https://server-api-for-testing-auth.appspot.com'>\n                    Api endpoint\n                </a>\n            </p>\n            <br />\n            <h5>3. Database:</h5>\n            <br />\n            <table className='striped centered responsive-table'>\n                <thead>\n                    <tr>\n                        <th>Feature Name</th>\n                        <th>Description</th>\n                        <th>Classification</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    <tr>\n                        <td>MongoDB Atlas</td>\n                        <td>a cloud database service deployed on AWS</td>\n                        <td>Database Service</td>\n                    </tr>\n                    <tr>\n                        <td>Mongoose</td>\n                        <td>\n                            makes interactions between Node and MongoDB much\n                            easier\n                        </td>\n                        <td>ODM (Object Document Mapper)</td>\n                    </tr>\n                </tbody>\n            </table>\n            <br />\n        </>\n    );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { signup } from '../../actions';\n\nclass Signup extends Component {\n    handleSubmit = formProps => {\n        this.props.signup(formProps, () => {\n            this.props.history.push('/features');\n        });\n    };\n\n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <>\n                <br />\n                <form\n                    onSubmit={handleSubmit(formProps =>\n                        this.handleSubmit(formProps)\n                    )}\n                >\n                    <div className='input-field'>\n                        <Field\n                            id='email'\n                            name='email'\n                            type='text'\n                            component='input'\n                            autoComplete='none'\n                        />\n                        <label htmlFor='email'>Email</label>\n                    </div>\n                    <div className='input-field'>\n                        <Field\n                            id='password'\n                            name='password'\n                            type='password'\n                            component='input'\n                            autoComplete='none'\n                        />\n                        <label htmlFor='password'> password</label>\n                    </div>\n                    <div className='red-text'>{this.props.errorMessage}</div>\n                    <button className='btn blue-grey darken-3'>Join</button>\n                </form>\n            </>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    return { errorMessage: state.auth.errorMassage };\n}\n// export default connect(mapStateToProps, { signup })(\n//     reduxForm({ form: 'signup' })(Signup)\n// );\n\nexport default compose(\n    connect(mapStateToProps, { signup }),\n    reduxForm({ form: 'signup' })\n)(Signup);\n","import axios from 'axios';\n// types\nexport const AUTH_USER = 'AUTH_USER';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n// 'https://server-api-for-testing-auth.appspot.com'\n// action creators\nexport const signup = (formProps, callback) => async dispatch => {\n    try {\n        const res = await axios.post(\n            'https://server-api-for-testing-auth.appspot.com/signup',\n            formProps\n        );\n\n        dispatch({\n            type: AUTH_USER,\n            payload: res.data.token\n        });\n        localStorage.setItem('token', res.data.token);\n        callback();\n    } catch (e) {\n        dispatch({\n            type: AUTH_ERROR,\n            payload: e.response.data.error || 'an error occurred'\n        });\n    }\n};\n\nexport const login = (formProps, callback) => async dispatch => {\n    try {\n        const res = await axios.post(\n            'https://server-api-for-testing-auth.appspot.com/login',\n            formProps\n        );\n        dispatch({\n            type: AUTH_USER,\n            payload: res.data.token\n        });\n        localStorage.setItem('token', res.data.token);\n        callback();\n    } catch (e) {\n        dispatch({\n            type: AUTH_ERROR,\n            payload: e.response.data.error || 'an error occurred'\n        });\n    }\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    return {\n        type: AUTH_USER,\n        payload: ''\n    };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions';\n\nexport class Logout extends Component {\n    componentDidMount() {\n        this.props.logout();\n    }\n    handleRedirect = () => {\n        setTimeout(() => {\n            this.props.history.push('/');\n        }, 2000);\n    };\n    render() {\n        return (\n            <>\n                {this.handleRedirect()}\n                <h3>Catch you in the flippity flip!</h3>\n            </>\n        );\n    }\n}\n\nexport default connect(null, { logout })(Logout);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { login } from '../../actions';\n\nclass Login extends Component {\n    handleSubmit = formProps => {\n        this.props.login(formProps, () => {\n            this.props.history.push('/features');\n        });\n    };\n\n    render() {\n        const { handleSubmit } = this.props;\n        return (\n            <>\n                <br />\n                <form\n                    onSubmit={handleSubmit(formProps =>\n                        this.handleSubmit(formProps)\n                    )}\n                >\n                    <div className='input-field'>\n                        <Field\n                            id='email'\n                            name='email'\n                            type='text'\n                            component='input'\n                            autoComplete='none'\n                        />\n                        <label htmlFor='email'>Email</label>\n                    </div>\n                    <div className='input-field'>\n                        <Field\n                            id='password'\n                            name='password'\n                            type='password'\n                            component='input'\n                            autoComplete='none'\n                        />\n                        <label htmlFor='password'> password</label>\n                    </div>\n                    <div className='red-text'>{this.props.errorMessage}</div>\n                    <button className='btn blue-grey darken-3'>Login</button>\n                </form>\n            </>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    return { errorMessage: state.auth.errorMassage };\n}\n// export default connect(mapStateToProps, { login })(\n//     reduxForm({ form: 'login' })(Login)\n// );\n\nexport default compose(\n    connect(mapStateToProps, { login }),\n    reduxForm({ form: 'login' })\n)(Login);\n","import React from 'react';\nimport requireAuth from './requireAuth';\n\nconst Features = () => {\n    return (\n        <>\n            <h1>Protected Resource</h1>\n            <p>only authenticated users have access to this route!</p>\n\n            <br />\n            <h5>Your Reward:</h5>\n            <p>\n                <a href='https://www.nbcnews.com/science/science-news/owl-monkeys-rate-among-animal-worlds-best-mates-fathers-n59316'>\n                    Thanks for signing up\n                </a>\n            </p>\n        </>\n    );\n};\n\nexport default requireAuth(Features);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default ChildComponent => {\n    class ComposedComponent extends Component {\n        // Our component just got rendered\n        componentDidMount() {\n            this.shouldNavigateAway();\n        }\n        // Our component just got updated\n        componentDidUpdate() {\n            this.shouldNavigateAway();\n        }\n        shouldNavigateAway() {\n            if (!this.props.auth) {\n                this.props.history.push('/');\n            }\n        }\n        render() {\n            return <ChildComponent {...this.props} />;\n        }\n    }\n    function mapStateToProps(state) {\n        return { auth: state.auth.authenticated };\n    }\n    return connect(mapStateToProps)(ComposedComponent);\n};\n","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <>\n            <footer\n                style={{ flexShrink: '0', marginTop: '80px' }}\n                className='page-footer blue-grey darken-4'\n            >\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col l6 s12'>\n                            <h5 className='white-text'>Developer's Note:</h5>\n                            <p className='grey-text text-lighten-4'>\n                                This work is part of a series of self\n                                development projects and courses, promoting some\n                                know-how in terms of technologies, strategies\n                                and architecture design.\n                            </p>\n                        </div>\n                        <div className='col l3 s12'>\n                            <h5 className='white-text'>Codebase</h5>\n                            <ul>\n                                <li>\n                                    <a\n                                        className='white-text'\n                                        href='https://github.com/bnmounir'\n                                    >\n                                        Github\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                        <div className='col l3 s12'>\n                            <h5 className='white-text'>Connect</h5>\n                            <ul>\n                                <li>\n                                    <a\n                                        className='white-text'\n                                        href='https://www.linkedin.com/in/bnmounir/'\n                                    >\n                                        LinkedIn\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className='footer-copyright'>\n                    <div className='container'>Mounir B.</div>\n                </div>\n            </footer>\n        </>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport Landing from './Landing';\nimport Signup from './auth/Signup';\nimport Logout from './auth/Logout';\nimport Login from './auth/Login';\nimport Features from './Features';\nimport Footer from './Footer';\n\nfunction App() {\n    return (\n        <>\n            <BrowserRouter>\n                <div style={{ flex: '1 0 auto' }}>\n                    <Header />\n                    <main className='container'>\n                        <Route exact path='/' component={Landing} />\n                        <Route exact path='/signup' component={Signup} />\n                        <Route exact path='/features' component={Features} />\n                        <Route exact path='/logout' component={Logout} />\n                        <Route exact path='/login' component={Login} />\n                    </main>\n                </div>\n                <Footer />\n            </BrowserRouter>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AUTH_USER, AUTH_ERROR } from '../actions';\n\nconst INITIAL_STATE = {\n    authenticated: '',\n    errorMassage: ''\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case AUTH_USER:\n            return { ...state, authenticated: action.payload };\n        case AUTH_ERROR:\n            return { ...state, errorMassage: action.payload };\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport auth from './authReducer';\n\nexport default combineReducers({ auth, form: formReducer });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(\n    reducers,\n    {\n        auth: { authenticated: localStorage.getItem('token') }\n    },\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}